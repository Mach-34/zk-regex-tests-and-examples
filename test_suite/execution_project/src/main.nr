global table = comptime { make_lookup_table() };
pub fn regex_match<let N: u32>(input: [u8; N]) {
    // regex: (a|b)+c
    let mut s = 0;
    s = table[255];
    for i in 0..input.len() {
        s = table[s * 256 + input[i] as Field];
    }
    assert((s == 2) | (s == 3), f"no match: {s}");
}
        
comptime fn make_lookup_table() -> [Field; 1024] {
    let mut table = [0; 1024];
    table[2 * 256 + 0] = 3;
    table[3 * 256 + 0] = 3;
    table[2 * 256 + 1] = 3;
    table[3 * 256 + 1] = 3;
    table[2 * 256 + 2] = 3;
    table[3 * 256 + 2] = 3;
    table[2 * 256 + 3] = 3;
    table[3 * 256 + 3] = 3;
    table[2 * 256 + 4] = 3;
    table[3 * 256 + 4] = 3;
    table[2 * 256 + 5] = 3;
    table[3 * 256 + 5] = 3;
    table[2 * 256 + 6] = 3;
    table[3 * 256 + 6] = 3;
    table[2 * 256 + 7] = 3;
    table[3 * 256 + 7] = 3;
    table[2 * 256 + 8] = 3;
    table[3 * 256 + 8] = 3;
    table[2 * 256 + 9] = 3;
    table[3 * 256 + 9] = 3;
    table[2 * 256 + 10] = 3;
    table[3 * 256 + 10] = 3;
    table[2 * 256 + 11] = 3;
    table[3 * 256 + 11] = 3;
    table[2 * 256 + 12] = 3;
    table[3 * 256 + 12] = 3;
    table[2 * 256 + 13] = 3;
    table[3 * 256 + 13] = 3;
    table[2 * 256 + 14] = 3;
    table[3 * 256 + 14] = 3;
    table[2 * 256 + 15] = 3;
    table[3 * 256 + 15] = 3;
    table[2 * 256 + 16] = 3;
    table[3 * 256 + 16] = 3;
    table[2 * 256 + 17] = 3;
    table[3 * 256 + 17] = 3;
    table[2 * 256 + 18] = 3;
    table[3 * 256 + 18] = 3;
    table[2 * 256 + 19] = 3;
    table[3 * 256 + 19] = 3;
    table[2 * 256 + 20] = 3;
    table[3 * 256 + 20] = 3;
    table[2 * 256 + 21] = 3;
    table[3 * 256 + 21] = 3;
    table[2 * 256 + 22] = 3;
    table[3 * 256 + 22] = 3;
    table[2 * 256 + 23] = 3;
    table[3 * 256 + 23] = 3;
    table[2 * 256 + 24] = 3;
    table[3 * 256 + 24] = 3;
    table[2 * 256 + 25] = 3;
    table[3 * 256 + 25] = 3;
    table[2 * 256 + 26] = 3;
    table[3 * 256 + 26] = 3;
    table[2 * 256 + 27] = 3;
    table[3 * 256 + 27] = 3;
    table[2 * 256 + 28] = 3;
    table[3 * 256 + 28] = 3;
    table[2 * 256 + 29] = 3;
    table[3 * 256 + 29] = 3;
    table[2 * 256 + 30] = 3;
    table[3 * 256 + 30] = 3;
    table[2 * 256 + 31] = 3;
    table[3 * 256 + 31] = 3;
    table[2 * 256 + 32] = 3;
    table[3 * 256 + 32] = 3;
    table[2 * 256 + 33] = 3;
    table[3 * 256 + 33] = 3;
    table[2 * 256 + 34] = 3;
    table[3 * 256 + 34] = 3;
    table[2 * 256 + 35] = 3;
    table[3 * 256 + 35] = 3;
    table[2 * 256 + 36] = 3;
    table[3 * 256 + 36] = 3;
    table[2 * 256 + 37] = 3;
    table[3 * 256 + 37] = 3;
    table[2 * 256 + 38] = 3;
    table[3 * 256 + 38] = 3;
    table[2 * 256 + 39] = 3;
    table[3 * 256 + 39] = 3;
    table[2 * 256 + 40] = 3;
    table[3 * 256 + 40] = 3;
    table[2 * 256 + 41] = 3;
    table[3 * 256 + 41] = 3;
    table[2 * 256 + 42] = 3;
    table[3 * 256 + 42] = 3;
    table[2 * 256 + 43] = 3;
    table[3 * 256 + 43] = 3;
    table[2 * 256 + 44] = 3;
    table[3 * 256 + 44] = 3;
    table[2 * 256 + 45] = 3;
    table[3 * 256 + 45] = 3;
    table[2 * 256 + 46] = 3;
    table[3 * 256 + 46] = 3;
    table[2 * 256 + 47] = 3;
    table[3 * 256 + 47] = 3;
    table[2 * 256 + 48] = 3;
    table[3 * 256 + 48] = 3;
    table[2 * 256 + 49] = 3;
    table[3 * 256 + 49] = 3;
    table[2 * 256 + 50] = 3;
    table[3 * 256 + 50] = 3;
    table[2 * 256 + 51] = 3;
    table[3 * 256 + 51] = 3;
    table[2 * 256 + 52] = 3;
    table[3 * 256 + 52] = 3;
    table[2 * 256 + 53] = 3;
    table[3 * 256 + 53] = 3;
    table[2 * 256 + 54] = 3;
    table[3 * 256 + 54] = 3;
    table[2 * 256 + 55] = 3;
    table[3 * 256 + 55] = 3;
    table[2 * 256 + 56] = 3;
    table[3 * 256 + 56] = 3;
    table[2 * 256 + 57] = 3;
    table[3 * 256 + 57] = 3;
    table[2 * 256 + 58] = 3;
    table[3 * 256 + 58] = 3;
    table[2 * 256 + 59] = 3;
    table[3 * 256 + 59] = 3;
    table[2 * 256 + 60] = 3;
    table[3 * 256 + 60] = 3;
    table[2 * 256 + 61] = 3;
    table[3 * 256 + 61] = 3;
    table[2 * 256 + 62] = 3;
    table[3 * 256 + 62] = 3;
    table[2 * 256 + 63] = 3;
    table[3 * 256 + 63] = 3;
    table[2 * 256 + 64] = 3;
    table[3 * 256 + 64] = 3;
    table[2 * 256 + 65] = 3;
    table[3 * 256 + 65] = 3;
    table[2 * 256 + 66] = 3;
    table[3 * 256 + 66] = 3;
    table[2 * 256 + 67] = 3;
    table[3 * 256 + 67] = 3;
    table[2 * 256 + 68] = 3;
    table[3 * 256 + 68] = 3;
    table[2 * 256 + 69] = 3;
    table[3 * 256 + 69] = 3;
    table[2 * 256 + 70] = 3;
    table[3 * 256 + 70] = 3;
    table[2 * 256 + 71] = 3;
    table[3 * 256 + 71] = 3;
    table[2 * 256 + 72] = 3;
    table[3 * 256 + 72] = 3;
    table[2 * 256 + 73] = 3;
    table[3 * 256 + 73] = 3;
    table[2 * 256 + 74] = 3;
    table[3 * 256 + 74] = 3;
    table[2 * 256 + 75] = 3;
    table[3 * 256 + 75] = 3;
    table[2 * 256 + 76] = 3;
    table[3 * 256 + 76] = 3;
    table[2 * 256 + 77] = 3;
    table[3 * 256 + 77] = 3;
    table[2 * 256 + 78] = 3;
    table[3 * 256 + 78] = 3;
    table[2 * 256 + 79] = 3;
    table[3 * 256 + 79] = 3;
    table[2 * 256 + 80] = 3;
    table[3 * 256 + 80] = 3;
    table[2 * 256 + 81] = 3;
    table[3 * 256 + 81] = 3;
    table[2 * 256 + 82] = 3;
    table[3 * 256 + 82] = 3;
    table[2 * 256 + 83] = 3;
    table[3 * 256 + 83] = 3;
    table[2 * 256 + 84] = 3;
    table[3 * 256 + 84] = 3;
    table[2 * 256 + 85] = 3;
    table[3 * 256 + 85] = 3;
    table[2 * 256 + 86] = 3;
    table[3 * 256 + 86] = 3;
    table[2 * 256 + 87] = 3;
    table[3 * 256 + 87] = 3;
    table[2 * 256 + 88] = 3;
    table[3 * 256 + 88] = 3;
    table[2 * 256 + 89] = 3;
    table[3 * 256 + 89] = 3;
    table[2 * 256 + 90] = 3;
    table[3 * 256 + 90] = 3;
    table[2 * 256 + 91] = 3;
    table[3 * 256 + 91] = 3;
    table[2 * 256 + 92] = 3;
    table[3 * 256 + 92] = 3;
    table[2 * 256 + 93] = 3;
    table[3 * 256 + 93] = 3;
    table[2 * 256 + 94] = 3;
    table[3 * 256 + 94] = 3;
    table[2 * 256 + 95] = 3;
    table[3 * 256 + 95] = 3;
    table[2 * 256 + 96] = 3;
    table[3 * 256 + 96] = 3;
    table[2 * 256 + 97] = 3;
    table[3 * 256 + 97] = 3;
    table[2 * 256 + 98] = 3;
    table[3 * 256 + 98] = 3;
    table[2 * 256 + 99] = 3;
    table[3 * 256 + 99] = 3;
    table[2 * 256 + 100] = 3;
    table[3 * 256 + 100] = 3;
    table[2 * 256 + 101] = 3;
    table[3 * 256 + 101] = 3;
    table[2 * 256 + 102] = 3;
    table[3 * 256 + 102] = 3;
    table[2 * 256 + 103] = 3;
    table[3 * 256 + 103] = 3;
    table[2 * 256 + 104] = 3;
    table[3 * 256 + 104] = 3;
    table[2 * 256 + 105] = 3;
    table[3 * 256 + 105] = 3;
    table[2 * 256 + 106] = 3;
    table[3 * 256 + 106] = 3;
    table[2 * 256 + 107] = 3;
    table[3 * 256 + 107] = 3;
    table[2 * 256 + 108] = 3;
    table[3 * 256 + 108] = 3;
    table[2 * 256 + 109] = 3;
    table[3 * 256 + 109] = 3;
    table[2 * 256 + 110] = 3;
    table[3 * 256 + 110] = 3;
    table[2 * 256 + 111] = 3;
    table[3 * 256 + 111] = 3;
    table[2 * 256 + 112] = 3;
    table[3 * 256 + 112] = 3;
    table[2 * 256 + 113] = 3;
    table[3 * 256 + 113] = 3;
    table[2 * 256 + 114] = 3;
    table[3 * 256 + 114] = 3;
    table[2 * 256 + 115] = 3;
    table[3 * 256 + 115] = 3;
    table[2 * 256 + 116] = 3;
    table[3 * 256 + 116] = 3;
    table[2 * 256 + 117] = 3;
    table[3 * 256 + 117] = 3;
    table[2 * 256 + 118] = 3;
    table[3 * 256 + 118] = 3;
    table[2 * 256 + 119] = 3;
    table[3 * 256 + 119] = 3;
    table[2 * 256 + 120] = 3;
    table[3 * 256 + 120] = 3;
    table[2 * 256 + 121] = 3;
    table[3 * 256 + 121] = 3;
    table[2 * 256 + 122] = 3;
    table[3 * 256 + 122] = 3;
    table[2 * 256 + 123] = 3;
    table[3 * 256 + 123] = 3;
    table[2 * 256 + 124] = 3;
    table[3 * 256 + 124] = 3;
    table[2 * 256 + 125] = 3;
    table[3 * 256 + 125] = 3;
    table[2 * 256 + 126] = 3;
    table[3 * 256 + 126] = 3;
    table[2 * 256 + 127] = 3;
    table[3 * 256 + 127] = 3;
    table[2 * 256 + 128] = 3;
    table[3 * 256 + 128] = 3;
    table[2 * 256 + 129] = 3;
    table[3 * 256 + 129] = 3;
    table[2 * 256 + 130] = 3;
    table[3 * 256 + 130] = 3;
    table[2 * 256 + 131] = 3;
    table[3 * 256 + 131] = 3;
    table[2 * 256 + 132] = 3;
    table[3 * 256 + 132] = 3;
    table[2 * 256 + 133] = 3;
    table[3 * 256 + 133] = 3;
    table[2 * 256 + 134] = 3;
    table[3 * 256 + 134] = 3;
    table[2 * 256 + 135] = 3;
    table[3 * 256 + 135] = 3;
    table[2 * 256 + 136] = 3;
    table[3 * 256 + 136] = 3;
    table[2 * 256 + 137] = 3;
    table[3 * 256 + 137] = 3;
    table[2 * 256 + 138] = 3;
    table[3 * 256 + 138] = 3;
    table[2 * 256 + 139] = 3;
    table[3 * 256 + 139] = 3;
    table[2 * 256 + 140] = 3;
    table[3 * 256 + 140] = 3;
    table[2 * 256 + 141] = 3;
    table[3 * 256 + 141] = 3;
    table[2 * 256 + 142] = 3;
    table[3 * 256 + 142] = 3;
    table[2 * 256 + 143] = 3;
    table[3 * 256 + 143] = 3;
    table[2 * 256 + 144] = 3;
    table[3 * 256 + 144] = 3;
    table[2 * 256 + 145] = 3;
    table[3 * 256 + 145] = 3;
    table[2 * 256 + 146] = 3;
    table[3 * 256 + 146] = 3;
    table[2 * 256 + 147] = 3;
    table[3 * 256 + 147] = 3;
    table[2 * 256 + 148] = 3;
    table[3 * 256 + 148] = 3;
    table[2 * 256 + 149] = 3;
    table[3 * 256 + 149] = 3;
    table[2 * 256 + 150] = 3;
    table[3 * 256 + 150] = 3;
    table[2 * 256 + 151] = 3;
    table[3 * 256 + 151] = 3;
    table[2 * 256 + 152] = 3;
    table[3 * 256 + 152] = 3;
    table[2 * 256 + 153] = 3;
    table[3 * 256 + 153] = 3;
    table[2 * 256 + 154] = 3;
    table[3 * 256 + 154] = 3;
    table[2 * 256 + 155] = 3;
    table[3 * 256 + 155] = 3;
    table[2 * 256 + 156] = 3;
    table[3 * 256 + 156] = 3;
    table[2 * 256 + 157] = 3;
    table[3 * 256 + 157] = 3;
    table[2 * 256 + 158] = 3;
    table[3 * 256 + 158] = 3;
    table[2 * 256 + 159] = 3;
    table[3 * 256 + 159] = 3;
    table[2 * 256 + 160] = 3;
    table[3 * 256 + 160] = 3;
    table[2 * 256 + 161] = 3;
    table[3 * 256 + 161] = 3;
    table[2 * 256 + 162] = 3;
    table[3 * 256 + 162] = 3;
    table[2 * 256 + 163] = 3;
    table[3 * 256 + 163] = 3;
    table[2 * 256 + 164] = 3;
    table[3 * 256 + 164] = 3;
    table[2 * 256 + 165] = 3;
    table[3 * 256 + 165] = 3;
    table[2 * 256 + 166] = 3;
    table[3 * 256 + 166] = 3;
    table[2 * 256 + 167] = 3;
    table[3 * 256 + 167] = 3;
    table[2 * 256 + 168] = 3;
    table[3 * 256 + 168] = 3;
    table[2 * 256 + 169] = 3;
    table[3 * 256 + 169] = 3;
    table[2 * 256 + 170] = 3;
    table[3 * 256 + 170] = 3;
    table[2 * 256 + 171] = 3;
    table[3 * 256 + 171] = 3;
    table[2 * 256 + 172] = 3;
    table[3 * 256 + 172] = 3;
    table[2 * 256 + 173] = 3;
    table[3 * 256 + 173] = 3;
    table[2 * 256 + 174] = 3;
    table[3 * 256 + 174] = 3;
    table[2 * 256 + 175] = 3;
    table[3 * 256 + 175] = 3;
    table[2 * 256 + 176] = 3;
    table[3 * 256 + 176] = 3;
    table[2 * 256 + 177] = 3;
    table[3 * 256 + 177] = 3;
    table[2 * 256 + 178] = 3;
    table[3 * 256 + 178] = 3;
    table[2 * 256 + 179] = 3;
    table[3 * 256 + 179] = 3;
    table[2 * 256 + 180] = 3;
    table[3 * 256 + 180] = 3;
    table[2 * 256 + 181] = 3;
    table[3 * 256 + 181] = 3;
    table[2 * 256 + 182] = 3;
    table[3 * 256 + 182] = 3;
    table[2 * 256 + 183] = 3;
    table[3 * 256 + 183] = 3;
    table[2 * 256 + 184] = 3;
    table[3 * 256 + 184] = 3;
    table[2 * 256 + 185] = 3;
    table[3 * 256 + 185] = 3;
    table[2 * 256 + 186] = 3;
    table[3 * 256 + 186] = 3;
    table[2 * 256 + 187] = 3;
    table[3 * 256 + 187] = 3;
    table[2 * 256 + 188] = 3;
    table[3 * 256 + 188] = 3;
    table[2 * 256 + 189] = 3;
    table[3 * 256 + 189] = 3;
    table[2 * 256 + 190] = 3;
    table[3 * 256 + 190] = 3;
    table[2 * 256 + 191] = 3;
    table[3 * 256 + 191] = 3;
    table[2 * 256 + 192] = 3;
    table[3 * 256 + 192] = 3;
    table[2 * 256 + 193] = 3;
    table[3 * 256 + 193] = 3;
    table[2 * 256 + 194] = 3;
    table[3 * 256 + 194] = 3;
    table[2 * 256 + 195] = 3;
    table[3 * 256 + 195] = 3;
    table[2 * 256 + 196] = 3;
    table[3 * 256 + 196] = 3;
    table[2 * 256 + 197] = 3;
    table[3 * 256 + 197] = 3;
    table[2 * 256 + 198] = 3;
    table[3 * 256 + 198] = 3;
    table[2 * 256 + 199] = 3;
    table[3 * 256 + 199] = 3;
    table[2 * 256 + 200] = 3;
    table[3 * 256 + 200] = 3;
    table[2 * 256 + 201] = 3;
    table[3 * 256 + 201] = 3;
    table[2 * 256 + 202] = 3;
    table[3 * 256 + 202] = 3;
    table[2 * 256 + 203] = 3;
    table[3 * 256 + 203] = 3;
    table[2 * 256 + 204] = 3;
    table[3 * 256 + 204] = 3;
    table[2 * 256 + 205] = 3;
    table[3 * 256 + 205] = 3;
    table[2 * 256 + 206] = 3;
    table[3 * 256 + 206] = 3;
    table[2 * 256 + 207] = 3;
    table[3 * 256 + 207] = 3;
    table[2 * 256 + 208] = 3;
    table[3 * 256 + 208] = 3;
    table[2 * 256 + 209] = 3;
    table[3 * 256 + 209] = 3;
    table[2 * 256 + 210] = 3;
    table[3 * 256 + 210] = 3;
    table[2 * 256 + 211] = 3;
    table[3 * 256 + 211] = 3;
    table[2 * 256 + 212] = 3;
    table[3 * 256 + 212] = 3;
    table[2 * 256 + 213] = 3;
    table[3 * 256 + 213] = 3;
    table[2 * 256 + 214] = 3;
    table[3 * 256 + 214] = 3;
    table[2 * 256 + 215] = 3;
    table[3 * 256 + 215] = 3;
    table[2 * 256 + 216] = 3;
    table[3 * 256 + 216] = 3;
    table[2 * 256 + 217] = 3;
    table[3 * 256 + 217] = 3;
    table[2 * 256 + 218] = 3;
    table[3 * 256 + 218] = 3;
    table[2 * 256 + 219] = 3;
    table[3 * 256 + 219] = 3;
    table[2 * 256 + 220] = 3;
    table[3 * 256 + 220] = 3;
    table[2 * 256 + 221] = 3;
    table[3 * 256 + 221] = 3;
    table[2 * 256 + 222] = 3;
    table[3 * 256 + 222] = 3;
    table[2 * 256 + 223] = 3;
    table[3 * 256 + 223] = 3;
    table[2 * 256 + 224] = 3;
    table[3 * 256 + 224] = 3;
    table[2 * 256 + 225] = 3;
    table[3 * 256 + 225] = 3;
    table[2 * 256 + 226] = 3;
    table[3 * 256 + 226] = 3;
    table[2 * 256 + 227] = 3;
    table[3 * 256 + 227] = 3;
    table[2 * 256 + 228] = 3;
    table[3 * 256 + 228] = 3;
    table[2 * 256 + 229] = 3;
    table[3 * 256 + 229] = 3;
    table[2 * 256 + 230] = 3;
    table[3 * 256 + 230] = 3;
    table[2 * 256 + 231] = 3;
    table[3 * 256 + 231] = 3;
    table[2 * 256 + 232] = 3;
    table[3 * 256 + 232] = 3;
    table[2 * 256 + 233] = 3;
    table[3 * 256 + 233] = 3;
    table[2 * 256 + 234] = 3;
    table[3 * 256 + 234] = 3;
    table[2 * 256 + 235] = 3;
    table[3 * 256 + 235] = 3;
    table[2 * 256 + 236] = 3;
    table[3 * 256 + 236] = 3;
    table[2 * 256 + 237] = 3;
    table[3 * 256 + 237] = 3;
    table[2 * 256 + 238] = 3;
    table[3 * 256 + 238] = 3;
    table[2 * 256 + 239] = 3;
    table[3 * 256 + 239] = 3;
    table[2 * 256 + 240] = 3;
    table[3 * 256 + 240] = 3;
    table[2 * 256 + 241] = 3;
    table[3 * 256 + 241] = 3;
    table[2 * 256 + 242] = 3;
    table[3 * 256 + 242] = 3;
    table[2 * 256 + 243] = 3;
    table[3 * 256 + 243] = 3;
    table[2 * 256 + 244] = 3;
    table[3 * 256 + 244] = 3;
    table[2 * 256 + 245] = 3;
    table[3 * 256 + 245] = 3;
    table[2 * 256 + 246] = 3;
    table[3 * 256 + 246] = 3;
    table[2 * 256 + 247] = 3;
    table[3 * 256 + 247] = 3;
    table[2 * 256 + 248] = 3;
    table[3 * 256 + 248] = 3;
    table[2 * 256 + 249] = 3;
    table[3 * 256 + 249] = 3;
    table[2 * 256 + 250] = 3;
    table[3 * 256 + 250] = 3;
    table[2 * 256 + 251] = 3;
    table[3 * 256 + 251] = 3;
    table[2 * 256 + 252] = 3;
    table[3 * 256 + 252] = 3;
    table[2 * 256 + 253] = 3;
    table[3 * 256 + 253] = 3;
    table[2 * 256 + 254] = 3;
    table[3 * 256 + 254] = 3;
    table[0 * 256 + 97] = 1;
    table[0 * 256 + 98] = 1;
    table[1 * 256 + 97] = 1;
    table[1 * 256 + 98] = 1;
    table[1 * 256 + 99] = 2;


    table
}
fn main(input: [u8; 10]) { regex_match(input); }

#[test(should_fail)]
fn test() {
let input = [13, 10, 116, 111, 58, 115, 117, 98, 106, 101, 99, 116, 58, 84, 104, 105, 115, 32, 105, 115, 32, 97, 32, 115, 117, 98, 106, 101, 99, 116, 32, 105, 110, 32, 84, 111, 32, 102, 105, 101, 108, 100, 46, 13, 10];
regex_match(input);
}