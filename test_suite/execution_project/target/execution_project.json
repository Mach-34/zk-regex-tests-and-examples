{"noir_version":"0.32.0+c679f01a19b02ad2ac2287c8e699b46887f7872c","hash":4222101577179021703,"abi":{"parameters":[{"name":"input","type":{"kind":"array","length":16,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":null,"error_types":{"7853504035987069906":{"error_kind":"fmtstring","length":13,"item_types":[{"kind":"field"}]}}},"bytecode":"H4sIAAAAAAAA/+3d2W7bRhiG4V+2bC1es7ibu6T73pKiZElnPmlPew1xIx/1rnpHvZ8C1VgkwBJTlCi/YTHDd4AHDqboj8nEQoB5kWRkh7Xc+7n88WjvuPzq1rSxN/LsHXn2jj17Y8/eiWfv1LM38exNPXszz97cs3fm2Tv37F149i49e1flXn1Vd3hffi2yu+Vyt17s8iJ/nS22D5tVtlw93G3yTb7arN4sNkWx2yw36+3Ddp1t82Wxyx9X2+IxO6zr2qys4wp5zme6c+Yhz/lcd85FyHO+0J2zCHnOl7pzLkOe80Z3ztW4Ot/pYd41ovMssvMC+GfPSzGdGfi/vIjsvP+Gzz+Al6WYzgxAo/r830R0ZsTtBsBguVXvp/V1X37NOq5q3kg7N4/hjG8pz+jijYvXxJt4EW+AdPB4C7RHvAGQGuINMFzEG/QtpodmAFrNdVx+vS+/Zt1WPlLNyrOsHkK6/oGYt3U/x8zd2ZHnLlXzq3nqsKS8g1BnfMfE8evpG5z4FS3iF5AOHr+B9ohfAFJD/AKGi/iFvsX0UA9Aq7nU8evIdPGrHkK6xq93TRu/jj13qZpfzVOHJeUdhDrjeyaOXw7xK17ELyAdPH4D7RG/AKSG+AUMF/ELfYvpoR6AVnOp49ex6eJXPYR0jV+3po1fY89dquZX89RhSXkHoc74vonjl/t394hf8SJ+Aeng8Rtoj/gFIDXEL2C4iF/oW0wP9QC0mksdv8ami1/1ENI1fn1g2vh14rlL1fxqnjosKe8g1Bk/NHH8eupexK9oEb+AdPD4DbRH/AKQGuIXMFzEL/Qtpod6AFrNpY5fJ6aLX/UQ0jV+fWTa+HXquUvV/GqeOiwp7yDUGV+ZOH5NzIhfESN+Aeng8Rtoj/gFIDXEL2C4iF/oW0wP9QC0mksdv05NF79emS5+fWza+DXx3KVqfjVPHZaUdxDqjJ+YOH5N3STiV7SIX0A6ePwG2iN+AUgN8QsYLuIX+hbTQz0AreZSx6+J6eJXPYR0jV+fmjZ+TT13qZpfzVOHJeUdhDrjZyaOXzM3ifgVLeIXkA4ev4H2iF8AUkP8AoaL+IW+xfRQD0CrudTxa2q6+FUPIV3j1+emjV8zz12q5lfz1GFJeQehzviFiePX3E0ifkWL+AWkg8dvoD3iF4DUEL+A4SJ+oW8xPdQD0GoudfyamS5+1UNI1/j1pWnj19xzl6r51Tx1WFLeQagzfmXi+HXmJhG/okX8AtLB4zfQHvELQGqIX8BwEb/Qt5ge6gFoNZc6fs1NF7/qIaRr/PratPHrzHOXqvnVPHVYUt5BqDN+Y+L4de4mEb+iRfwC0sHjN9Ae8QtAaohfwHARv9C3mB7qAWg1lzp+nZkuftVDSNf49a1p49e55y5V86t56rCkvINQZ/zOxPHrwk0ifkWL+AWkg8dvoD3iF4DUEL+A4SJ+oW8xPdQD0Goudfw6N138qoeQrvHre9PGrwvPXarmV/PUYUl5B6HO+IOJ49elm0T8ihbxC0gHj99Ae8QvAKkhfgHDRfxC32J6qAeg1Vzq+HVhuvhVDyFd49ePpo1fl567VM2v5qnDkvIOQp0xM3H8unKTiF/RIn4B6eDxG2iP+AUgNcQvYLiIX+hbTA/1ALSaSx2/Lk0XvzLTxa/ctPHrynOXqvnVPHVYUt5BqDMuTBy/3G96xK94Eb+AdPD4DbRH/AKQGuIXMFzEL/Qtpod6AFrNpY5fV6aLX/UQ0jV+FaaNX9eeu1TNr+apw5LyDkKdcRngjMEP+l+/OXePT+tXd7ZxOeu6ceYjO3xI3X8/sUPHm+xN92Z78z33D+25v2/U/bFLV599ZXZU+/FPtb0/bm9//+X+z998/49J7+xuF3D2Y7jZiyzgud8EnJ2Hm71eBjx3EXD2Jtzs4nW42SG/B9cPAWcH/LVcB/zsZH/77ETxm9xfI8VHU8G6AQA=","debug_symbols":"tdhNasMwEEDhu2jtRaT5ceKrlFCUxCkGI4fYKRSTu9duG2jpMrydRhre7ttoDqf2cHt77cp5GEPzMod+OOapG8oyzSH61914yWUdxylfp9DETdpVoS2n9aj1vQrnrm9DY3Kv/i/X25/dFNPv1X0VYs3mt2x+h+bThs1HNp/YvLB5ZfPG5lm1iVWbWLWJVSusWmHVCqtWWLXCqhVWrbBqhVUrrFph1SqrVlm1yqpVVq2yapVVq6xaZdUqq1ZZtcaqNVatsWqNVWusWmPVGqvWWLXGqjVWrbNqnVXrrFpn1Tqr1lm1zqp1Vq2zav15tSnpI29/VvfL8J6vXT707fovuL7dyvHxTbiM08fl+2XZ/QQ=","file_map":{"53":{"source":"global table = make_lookup_table();\npub fn regex_match<let N: u32>(input: [u8; N]) {\n    // regex: ^m(a|b)+-(c|d)+e$\n    let mut s = 0;\n    for i in 0..input.len() {\n        s = table[s * 256 + input[i] as Field];\n    }\n    assert_eq(s, 5, f\"no match: {s}\");\n}\n    \n        \ncomptime fn make_lookup_table() -> [Field; 1536] {\n    let mut table = [0; 1536];\n    table[0 * 256 + 109] = 1;\n    table[1 * 256 + 97] = 2;\n    table[1 * 256 + 98] = 2;\n    table[2 * 256 + 97] = 2;\n    table[2 * 256 + 98] = 2;\n    table[2 * 256 + 45] = 3;\n    table[3 * 256 + 99] = 4;\n    table[3 * 256 + 100] = 4;\n    table[4 * 256 + 99] = 4;\n    table[4 * 256 + 100] = 4;\n    table[4 * 256 + 101] = 5;\n\n\n    // experimentally confirmed that storing a transition for each char code for accept state produces less gates than adding an `if` to check if the current state is not \"accept\"\n    // I might be wrong. I tested for input of length 128 and 1024.\n    for i in 0..256 {\n        table[5 * 256 + i] = 5;\n    }\n    table\n}\nfn main(input: [u8; 16]) { regex_match(input); }","path":"/home/hdvanegasm/Documents/hashcloak/aztec/zk-regex-tests-and-examples/test_suite/execution_project/src/main.nr"}},"names":["main"]}